---
# API Gateway
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: document-storage
spec:
  selector:
    app: api-gateway
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: YOUR_REGISTRY/api-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Ingestion Service
apiVersion: v1
kind: Service
metadata:
  name: ingestion-service
  namespace: document-storage
spec:
  selector:
    app: ingestion-service
  ports:
    - port: 5001
      targetPort: 5001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ingestion-service
  template:
    metadata:
      labels:
        app: ingestion-service
    spec:
      containers:
      - name: ingestion-service
        image: YOUR_REGISTRY/ingestion-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Metadata Service
apiVersion: v1
kind: Service
metadata:
  name: metadata-service
  namespace: document-storage
spec:
  selector:
    app: metadata-service
  ports:
    - port: 5002
      targetPort: 5002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: metadata-service
  template:
    metadata:
      labels:
        app: metadata-service
    spec:
      containers:
      - name: metadata-service
        image: YOUR_REGISTRY/metadata-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5002
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Storage Service
apiVersion: v1
kind: Service
metadata:
  name: storage-service
  namespace: document-storage
spec:
  selector:
    app: storage-service
  ports:
    - port: 5003
      targetPort: 5003
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: storage-service
  template:
    metadata:
      labels:
        app: storage-service
    spec:
      containers:
      - name: storage-service
        image: YOUR_REGISTRY/storage-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5003
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Processing Service
apiVersion: v1
kind: Service
metadata:
  name: processing-service
  namespace: document-storage
spec:
  selector:
    app: processing-service
  ports:
    - port: 5004
      targetPort: 5004
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: processing-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: processing-service
  template:
    metadata:
      labels:
        app: processing-service
    spec:
      containers:
      - name: processing-service
        image: YOUR_REGISTRY/processing-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5004
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
---
# Search Service
apiVersion: v1
kind: Service
metadata:
  name: search-service
  namespace: document-storage
spec:
  selector:
    app: search-service
  ports:
    - port: 5005
      targetPort: 5005
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: search-service
  template:
    metadata:
      labels:
        app: search-service
    spec:
      containers:
      - name: search-service
        image: YOUR_REGISTRY/search-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5005
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# AI Service
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: document-storage
spec:
  selector:
    app: ai-service
  ports:
    - port: 5006
      targetPort: 5006
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: document-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
    spec:
      containers:
      - name: ai-service
        image: YOUR_REGISTRY/ai-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5006
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
---
# Notification Service
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: document-storage
spec:
  selector:
    app: notification-service
  ports:
    - port: 5007
      targetPort: 5007
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: YOUR_REGISTRY/notification-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5007
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
---
# Bulk Upload Service
apiVersion: v1
kind: Service
metadata:
  name: bulk-upload-service
  namespace: document-storage
spec:
  selector:
    app: bulk-upload-service
  ports:
    - port: 5008
      targetPort: 5008
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bulk-upload-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bulk-upload-service
  template:
    metadata:
      labels:
        app: bulk-upload-service
    spec:
      containers:
      - name: bulk-upload-service
        image: YOUR_REGISTRY/bulk-upload-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5008
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
---
# Saga Orchestrator
apiVersion: v1
kind: Service
metadata:
  name: saga-orchestrator
  namespace: document-storage
spec:
  selector:
    app: saga-orchestrator
  ports:
    - port: 5009
      targetPort: 5009
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: saga-orchestrator
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: saga-orchestrator
  template:
    metadata:
      labels:
        app: saga-orchestrator
    spec:
      containers:
      - name: saga-orchestrator
        image: YOUR_REGISTRY/saga-orchestrator:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5009
        envFrom:
        - configMapRef:
            name: dms-config
        - secretRef:
            name: dms-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Admin Service (Frontend)
apiVersion: v1
kind: Service
metadata:
  name: admin-service
  namespace: document-storage
spec:
  selector:
    app: admin-service
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-service
  namespace: document-storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: admin-service
  template:
    metadata:
      labels:
        app: admin-service
    spec:
      containers:
      - name: admin-service
        image: YOUR_REGISTRY/admin-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "http://api-gateway:8000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# SMTP (MailHog for testing)
apiVersion: v1
kind: Service
metadata:
  name: smtp
  namespace: document-storage
spec:
  selector:
    app: smtp
  ports:
    - name: smtp
      port: 1025
      targetPort: 1025
    - name: http
      port: 8025
      targetPort: 8025
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smtp
  namespace: document-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smtp
  template:
    metadata:
      labels:
        app: smtp
    spec:
      containers:
      - name: smtp
        image: mailhog/mailhog:latest
        ports:
        - name: smtp
          containerPort: 1025
        - name: http
          containerPort: 8025
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
