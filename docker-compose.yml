

x-common-environment:
  &default-env
  RABBITMQ_HOST: rabbitmq
  METADATA_SERVICE_URL: http://metadata-service:5002
  STORAGE_SERVICE_URL: http://storage-service:5003

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      <<: *default-env
      INGESTION_SERVICE_URL: http://ingestion-service:5001
      PROCESSING_SERVICE_URL: http://processing-service:5004
      SEARCH_SERVICE_URL: http://search-service:5005
      #AI_SERVICE_URL: http://ai-service:5006
      NOTIFICATION_SERVICE_URL: http://notification-service:5007
      BULK_UPLOAD_SERVICE_URL: http://bulk-upload-service:5008
      SAGA_ORCHESTRATOR_URL: http://saga-orchestrator:5009
    depends_on:
      - ingestion-service
      - metadata-service
      - storage-service
      - processing-service
      - search-service
      - ai-service
      - notification-service
      - bulk-upload-service
      - saga-orchestrator
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  ingestion-service:
    build: ./ingestion-service
    ports:
      - "5001:5001"
    environment:
      <<: *default-env
    depends_on:
      - rabbitmq
    networks:
      - backend

  metadata-service:
    build: ./metadata-service
    ports:
      - "5002:5002"
    environment:
      <<: *default-env
      POSTGRES_HOST: postgres
      POSTGRES_DB: document_storage
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      MONGO_HOST: mongo
      MONGO_DB: metadata_db
    depends_on:
      - postgres
      - mongo
    volumes:
      - ./metadata-service/config:/app/config
    networks:
      - backend

  storage-service:
    build: ./storage-service
    ports:
      - "5003:5003"
    environment:
      <<: *default-env
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: documents
    depends_on:
      - minio
    networks:
      - backend

  processing-service:
    build: ./processing-service
    ports:
      - "5004:5004"
    depends_on:
      - storage-service
    networks:
      - backend

  search-service:
    build: ./search-service
    ports:
      - "5005:5005"
    environment:
      ELASTICSEARCH_HOST: elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - backend

  ai-service:
    build: ./ai-service
    ports:
      - "5006:5006"
    volumes:
      - ./ai-service:/app
    depends_on:
      - metadata-service
    networks:
      - backend

  notification-service:
    build: ./notification-service
    ports:
      - "5007:5007"
    environment:
      SMTP_HOST: smtp
      SMTP_PORT: 1025
      SMTP_USER: user
      SMTP_PASSWORD: password
    depends_on:
      - smtp
    networks:
      - backend

  bulk-upload-service:
    build: ./bulk-upload-service
    ports:
      - "5008:5008"
    environment:
      <<: *default-env
    depends_on:
      - metadata-service
      - storage-service
    networks:
      - backend

  saga-orchestrator:
    build: ./saga-orchestrator
    ports:
      - "5009:5009"
    environment:
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - backend

  # Logging services
  mongo-log:
    image: mongo:6.0
    container_name: graylog-mongo
    restart: always
    volumes:
      - mongo_data:/data/db
    networks:
      - graylog

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: graylog-elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - graylog

  graylog:
    image: graylog/graylog:5.2
    container_name: graylog
    restart: always
    environment:
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - GRAYLOG_MONGODB_URI=mongodb://mongo:27017/graylog
    ports:
      - 9002:9000
      - 12201:12201
      - 12201:12201/udp
    depends_on:
      - mongo-log
      - elasticsearch
    networks:
      - graylog

  smtp:
    image: mailhog/mailhog:latest
    container_name: smtp
    hostname: smtp
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend

  minio:
    image: minio/minio:RELEASE.2023-10-25T06-33-25Z
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - backend

  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: document_storage
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend


networks:
  graylog:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  elasticsearch_data:
  rabbitmq_data:
  minio_data:
